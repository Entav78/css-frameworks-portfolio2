import{a as c}from"./authGuard-D8wNiKa-.js";import{h as i}from"./headers-CYnZ5qCU.js";import{b as p}from"./app-aTn1yUF9.js";class f{constructor(r="https://v2.api.noroff.dev/social/profiles"){this.baseApiUrl=r}async getProfile(r,o=!1){if(!r)throw new Error("Username is required to fetch a profile.");const t=`${this.baseApiUrl}/${r}?_posts=${o}`;console.log("Fetching from API URL:",t);try{const e=i();console.log("Headers being sent:",{"Content-Type":e.get("Content-Type"),Authorization:e.get("Authorization")});const s=await fetch(t,{headers:e});if(!s.ok)throw console.error("API response status:",s.status),new Error(`Failed to fetch profile data: ${s.status}`);const n=await s.json();return console.log("Profile data:",n),console.log("Full API response for profile:",n),n}catch(e){throw console.error("Error fetching profile data:",e.message),e}}async getProfiles(r=10,o=1){const t=`${this.baseApiUrl}?limit=${r}&page=${o}`;try{const e=await fetch(t,{headers:i()});if(!e.ok)throw new Error("Failed to fetch profiles");const s=await e.json();return console.log("Profiles data:",s),s}catch(e){throw console.error("Error fetching profiles:",e.message),e}}}c();console.log("Profile page script is running");(async function(){document.readyState==="loading"?(console.log("DOM is still loading, setting event listener"),document.addEventListener("DOMContentLoaded",l)):(console.log("DOM already loaded, running setup directly"),await l())})();async function l(){console.log("Setting up profile page");try{const a=new f,r=JSON.parse(localStorage.getItem("userDetails"));if(!r?.name){console.error("User details are missing or invalid.");return}const o=r.name;console.log("Fetching user profile for:",o);const e=(await a.getProfile(o,!0))?.data;if(!e){console.error("Failed to fetch user profile data.");return}d(e),u(e.posts||[],o)}catch(a){console.error("Error fetching user profile or posts:",a.message)}}function d({name:a,email:r,bio:o,avatar:t,banner:e}){const s=document.getElementById("dynamic-profile-details");if(!s){console.error("Dynamic profile details section not found.");return}if(t?.url){const n=document.querySelector(".personal-avatar");n&&(n.style.display="none")}s.innerHTML=`
    <h2>${a}</h2>
    <p>Email: ${r}</p>
    ${o?`<p>Bio: ${o}</p>`:""}
    ${t?.url?`<img src="${t.url}" alt="${t.alt||"Avatar"}" class="profile-avatar" />`:"<p>No avatar available</p>"}
    ${e?.url?`<img src="${e.url}" alt="${e.alt||"Banner"}" class="profile-banner" />`:"<p>No banner available</p>"}
  `}function u(a,r){const o=document.getElementById("user-posts");if(!o){console.error("User posts section not found.");return}if(a.length===0){o.innerHTML=`<h2>${r}'s Posts</h2><p>No posts found.</p>`;return}const t=document.createElement("div");t.className="post-list",a.forEach(e=>{const s=document.createElement("div");s.className="post-card",s.innerHTML=`
      <div class="post-content">
        <h3>
          <a href="${p}/post/?id=${e.id}" class="post-link">${e.title||"Untitled Post"}</a>
        </h3>
        <p>${e.body||"No content available."}</p>
        ${e.image?`<img src="${e.image}" alt="Post image" class="post-image" />`:"<p>No image available</p>"}
      </div>
    `,t.appendChild(s)}),o.innerHTML=`<h2>${r}'s Posts</h2>`,o.appendChild(t)}
